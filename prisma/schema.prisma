// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customers {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  address     String        @db.VarChar(255)
  phonenumber String        @db.VarChar(255)
  username    String        @unique @db.VarChar(255)
  password    String        @db.VarChar(255)
  email       String        @unique @db.VarChar(255)
  is_admin    Boolean?      @default(false)
  orders      orders[]
}

model kittens {
  id                  Int                 @id @default(autoincrement())
  name                String              @db.VarChar(255)
  breed               String              @db.VarChar(255)
  description         String              @db.VarChar(255)
  price               Int
  img_url             String              @db.VarChar(255)
  available           Boolean?            @default(true)
  orders_kitten       orders_kitten[]
}
// change to be called orders (a cart is an order that isActive === true)
model orders {
  id                      Int                   @id @default(autoincrement())
  customer_id             Int
  customers               customers?            @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  total_amount            Int
  is_active               Boolean?              @default(true)
  shipping_address        String                @db.VarChar(255)
  orders_kitten           orders_kitten[]
}

// change to be called orders_kitten
model orders_kitten {
  id              Int             @id @default(autoincrement())
  kitten_id       Int
  order_id        Int
  kittens         kittens?        @relation(fields: [kitten_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders          orders?         @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

